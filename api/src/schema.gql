# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  fbUserId: String
  phoneNumber: String
  role: String!
  password: String!
}

type CheckResponse {
  request_id: String!
  event_id: String!
  status: String!
  price: String!
  currency: String!
  access_token: String
}

type Login {
  access_token: String
}

type Profile {
  id: String!
  userId: String!
  email: String!
  firstName: String!
  lastName: String!
}

type RemoveProfile {
  status: String!
}

type Room {
  """Room Id"""
  id: String!

  """Caller ID"""
  callerId: String!

  """Callee ID"""
  calleeId: String!

  """Caller"""
  caller: Profile!

  """Callee"""
  callee: Profile!

  """When call ended"""
  ended: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PendingRoom {
  waiting: Boolean!
}

type UserWaiting {
  """User Waiting ID"""
  id: Int!
  profile: Profile!
  profileId: String!
  queuedAt: String!
}

type Feedback {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Encounter {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  findUser(number: String!): User
  login(password: String!, number: String!): Login!
  signUp(password: String!, number: String!): SignUp
  verifyCode(code: String!, request_id: String!): CheckResponse
  findAllProfiles: [Profile!]!
  findProfile: Profile
  waitForRoom: PendingRoom!
  findRoomForUser: Room
  room(id: String!): Room!
  userWaiting(id: Int!): UserWaiting!
  feedback(id: Int!): Feedback!
  encounter(id: Int!): Encounter!
}

union SignUp = RequestResponse | Login

type RequestResponse {
  request_id: String!
  status: String!
}

type Mutation {
  createUser(data: CreateUserDTO!): User!
  createProfile(data: CreateProfileDto!): Profile!
  updateProfile(profile: UpdateProfileDto!, id: String!): Profile!
  removeProfile(id: String!): RemoveProfile!
  createRoom(createRoomInput: CreateRoomInput!): Room!
  updateRoom(updateRoomInput: UpdateRoomInput!): Room!
  removeRoom(id: String!): Room
  createUserWaiting(ProfileId: String!): UserWaiting!
  removeUserWaiting(id: Int!): UserWaiting!
  createFeedback(createFeedbackInput: CreateFeedbackInput!): Feedback!
  updateFeedback(updateFeedbackInput: UpdateFeedbackInput!): Feedback!
  removeFeedback(id: Int!): Feedback!
  createEncounter(createEncounterInput: CreateEncounterInput!): Encounter!
  updateEncounter(updateEncounterInput: UpdateEncounterInput!): Encounter!
  removeEncounter(id: Int!): Encounter!
}

input CreateUserDTO {
  phoneNumber: String
  fbUserId: String
  password: String!
}

input CreateProfileDto {
  email: String!
  firstName: String!
  lastName: String!
}

input UpdateProfileDto {
  email: String!
  firstName: String!
  lastName: String!
}

input CreateRoomInput {
  """Caller id"""
  callerId: String!

  """Callee id"""
  calleeId: String!
}

input UpdateRoomInput {
  """Caller id"""
  callerId: String

  """Callee id"""
  calleeId: String
  id: Int!
}

input CreateFeedbackInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateFeedbackInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateEncounterInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateEncounterInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type Subscription {
  roomCreated: Room
}
