// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  USER
}

model User {
  id          String   @id @unique @default(uuid())
  // Possible Profile Attributes
  phoneNumber String?  @unique
  fbUserId    String?  @unique
  password    String
  // Relationships
  profile     Profile? // Signifies one or zero profiles for accounts
  role        Role     @default(USER)
}

model Profile {
  id             String          @id @unique @default(uuid())
  // Relationships
  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String          @unique
  SearchCriteria SearchCriteria?
  // Attributes
  email          String
  firstName      String
  lastName       String
  HostedRoom     Room?           @relation("host")
  JoinedRoom     Room?           @relation("guest")
}

model SearchCriteria {
  id           Int       @id @unique @default(autoincrement())
  // Attributes
  searchRadius Float
  // Relationships
  profile      Profile   @relation(fields: [profileId], references: [id], onDelete: Cascade)
  profileId    String    @unique
  location     Location?
  // location.latitude | location.longitude
}

model Location {
  id               Int            @id @unique @default(autoincrement())
  latitude         Float
  longitude        Float
  searchCriteria   SearchCriteria @relation(fields: [searchCriteriaId], references: [id], onDelete: Cascade)
  searchCriteriaId Int            @unique
}

model Room {
  id      String   @id @unique @default(uuid())
  host    Profile? @relation(name: "host", fields: [hostId], references: [id], onDelete: Cascade)
  hostId  String?  @unique
  guest   Profile? @relation(name: "guest", fields: [guestId], references: [id], onDelete: Cascade)
  guestId String?  @unique
}
